name: Github Actions

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.10"]
        # os: [ubuntu-18.94, ubuntu-latest, macOS-latest, windows-latest, windows-2022, macos-10.15]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install as develop
      run: | 
        pip install -e .

    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags')    
    strategy:
      matrix:
        # python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        python-version: ["cp310-cp310"]
        # os: [ubuntu-18.94, ubuntu-latest, macOS-latest, windows-latest, windows-2022, macos-10.15]
        os: [ubuntu-latest]
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: RalfG/python-wheels-manylinux-build@v0.4.2
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'

    - name: Store wheel artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python${{ matrix.python-version }}-dist
        path: dist/

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags')    
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Aggregate wheels
        shell: bash
        run: | 
          mkdir dist
          find . -type f -name "*.whl" -exec mv -t dist/ {} +
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
